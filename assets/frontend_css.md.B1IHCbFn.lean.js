import{_ as a,c as o,ad as l,o as t}from"./chunks/framework.aYmOcSUd.js";const p=JSON.parse('{"title":"css","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/css.md","filePath":"frontend/css.md"}'),i={name:"frontend/css.md"};function c(r,e,d,s,n,f){return t(),o("div",null,e[0]||(e[0]=[l('<h1 id="css" tabindex="-1">css <a class="header-anchor" href="#css" aria-label="Permalink to &quot;css&quot;">​</a></h1><h2 id="🔸-bfc" tabindex="-1">🔸 BFC <a class="header-anchor" href="#🔸-bfc" aria-label="Permalink to &quot;🔸 BFC&quot;">​</a></h2><p>难度：★★☆☆☆</p><h3 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h3><p><code>BFC</code> 即 Block Formatting Contexts (块级格式化上下文)。 <code>BFC</code> 是一种特殊的上下文环境。当一个元素创建 <code>BFC</code> 后，就具备了一个完全独立的环境。 <code>BFC</code> 会影响当前元素和内部元素的布局表现，但不会影响跟外部元素之间的布局关系。</p><h3 id="解决什么问题" tabindex="-1">解决什么问题 <a class="header-anchor" href="#解决什么问题" aria-label="Permalink to &quot;解决什么问题&quot;">​</a></h3><ul><li>解决浮动和定位引起的布局问题。</li><li>阻止：父元素高度塌陷。</li><li>防止：<code>margin</code> 合并。</li></ul><h3 id="创建bfc方法" tabindex="-1">创建BFC方法 <a class="header-anchor" href="#创建bfc方法" aria-label="Permalink to &quot;创建BFC方法&quot;">​</a></h3><ul><li>overflow：当一个元素的 <code>overflow</code> 属性值不是 visible、clip 时。比如：overflow: hidden、overflow: auto。</li><li>float：即 <code>float</code> 属性值不为 none。</li><li>position：即 <code>position</code> 属性值是 absolute 或 fixed。</li><li>display：当一个元素的 <code>display</code> 属性设置成 flow-root、flex、grid、inline-block、table、table-cell、table-caption。</li></ul>',9)]))}const u=a(i,[["render",c]]);export{p as __pageData,u as default};
